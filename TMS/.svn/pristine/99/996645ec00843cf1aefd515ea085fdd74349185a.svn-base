package com.h3c.imc.resouce;

import java.io.IOException;

import org.apache.commons.httpclient.HttpStatus;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.auth.AuthScope;
import org.apache.http.auth.UsernamePasswordCredentials;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.util.EntityUtils;

import com.h3c.imc.entity.SysInfoEntity;
import com.h3c.imc.utils.XmlConverter;
import com.h3c.imc.utils.XmlUtils;

/**
 * 
 * @author 71071
 *	调用iMC的接口获取配置信息的数据
 */
public class ConfigureResource {
	
	private Log runLog = LogFactory.getLog(ConfigureResource.class);
	
	private static String imcIp = XmlUtils.getNodeText("IMCIp");
	
	private static int iMCPort = Integer.parseInt(XmlUtils.getNodeText("IMCPort"));
	
	private static String imcUserName  = XmlUtils.getNodeText("IMCUserName");
	
	private static String iMCPassword = XmlUtils.getNodeText("IMCPassword");
	
			static String url = "http://" + imcIp + ":" + iMCPort + "/imcrs/";
	
	/**
	 * 查询系统信息，(系统名称，网管版本)
	 * @throws IOException 
	 * @throws ClientProtocolException 
	 */
	public static SysInfoEntity getSysInfo(){
		DefaultHttpClient client = new DefaultHttpClient();
		client.getCredentialsProvider().setCredentials(new AuthScope(imcIp, iMCPort, "iMC RESTful Web Services"),
				new UsernamePasswordCredentials(imcUserName, iMCPassword));
		HttpGet httpGet = new HttpGet(url);
		HttpResponse response;
		try {
			response = client.execute(httpGet);
			HttpEntity entity = response.getEntity();
			int statusCode = response.getStatusLine().getStatusCode();
			if(statusCode == HttpStatus.SC_OK){
				XmlConverter<SysInfoEntity> xmlConverter = new XmlConverter<>(SysInfoEntity.class);
				if(null != entity){
					String xmlSysInfoEntity = EntityUtils.toString(entity);
					return xmlConverter.unmarshal(xmlSysInfoEntity);
				}
			}
			return null;
		} catch (ClientProtocolException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return null;
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return null;
		}
		
	}
	
	
}
